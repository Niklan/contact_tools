<?php

/**
 * @file
 * Main file for hooks and custom functions.
 */

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function contact_tools_form_contact_message_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $storage = $form_state->getStorage();

  if (isset($storage['contact_tools']) && $storage['contact_tools']['is_ajax']) {
    $classes_array = $form['#attributes']['class'];
    $classes_array[] = 'contact-tools-wrapper';
    $classes = implode(' ', $classes_array);
    $form['#prefix'] = '<div id="contact-form-' . $form['#build_id'] . '" class="' . $classes . '">';
    $form['#suffix'] = '</div>';

    $form['system_messages'] = [
      '#type' => 'item',
      '#id' => 'contact-form-messages-' . $form['#build_id'],
      '#attributes' => [
        'class' => 'contact-form-messages',
      ],
      '#weight' => -100,
    ];
    $form['actions']['submit']['#ajax'] = [
      'callback' => 'contact_tools_ajax_submit_handler',
      'event' => 'click',
      'progress' => [
        'type' => 'throbber',
      ],
    ];
  }
}

/**
 * Ajax submit handler for contact form called with AJAX support.
 */
function contact_tools_ajax_submit_handler(array &$form, FormStateInterface $form_state) {
  $form_state->setRebuild();
  $messages = [
    '#theme' => 'status_messages',
    '#message_list' => drupal_get_messages(),
    '#status_headings' => [
      'status' => t('Status message'),
      'error' => t('Error message'),
      'warning' => t('Warning message'),
    ],
    '#weight' => -100,
  ];

  $ajax_response = new AjaxResponse();
  // This command fix focus jumps on the page is there is multiple forms.
  // @see /core/misc/ajax.js:861-884
  $ajax_response->addCommand(new InvokeCommand('#contact-form-' . $form['#build_id_old'], 'focus'));
  $ajax_response->addCommand(new ReplaceCommand('#contact-form-' . $form['#build_id_old'], $form));
  $ajax_response->addCommand(new ReplaceCommand('#contact-form-messages-' . $form['#build_id'], $messages));
  \Drupal::moduleHandler()->alter('contact_tools_ajax_response', $ajax_response, $form, $form_state);
  return $ajax_response;
}
